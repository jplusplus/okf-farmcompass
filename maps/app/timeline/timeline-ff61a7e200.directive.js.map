{"version":3,"sources":["/.tmp/app/timeline/app/timeline/timeline.directive.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","angular","module","directive","$window","$filter","$translate","Timeline","restrict","scope","meta","step","replace","template","link","element","_class","_this","this","i18n","fit","svg","d3","select","timeline","config","bounding","$watch","draw","on","windowResizeEvent","_","throttle","resize","bind","$on","off","value","pick","node","getBoundingClientRect","data","smoothing","yunit","yaxislabel","highlights","rulers","instant","type","charttype","min","max","css","window","height","offset","top","get","_windowResizeEvent","uniqueId"],"mappings":"AAAA,YAIA,SAASA,iBAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAFhH,GAAIC,cAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAAiB,MAAO,UAAUR,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYZ,EAAiBH,EAAYiB,UAAWF,GAAiBC,GAAab,EAAiBH,EAAagB,GAAqBhB,KAIhiBkB,SAAQC,OAAO,OAAOC,UAAU,YAAA,UAAA,UAAA,aAAA,WAAY,SAAUC,EAASC,EAASC,EAAYC,GAClF,OACEC,SAAU,IACVC,OACEC,KAAM,IACNC,KAAM,KAERC,SAAS,EACTC,SAAU,kEACVC,KAAM,SAAcL,EAAOM,GACzB,MAAO,KAAK,WACV,QAASC,KACP,GAAIC,GAAQC,IAEZrC,iBAAgBqC,KAAMF,GAGtBE,KAAKC,KAAOd,EAAQ,QAEpBa,KAAKE,MAELF,KAAKG,IAAMC,GAAGC,OAAOR,EAAQ,IAAIQ,OAAO,OAExCL,KAAKM,SAAW,GAAIjB,GAASW,KAAKG,KAElCH,KAAKM,SAASC,OAAOP,KAAKQ,YAE1BjB,EAAMkB,OAAO,OAAQ,SAAUhB,GAEzBA,EAAOF,EAAMC,KAAKpB,QAEpB2B,EAAMW,KAAKjB,KAIfV,QAAQc,QAAQX,GAASyB,GAAGX,KAAKY,kBAAmBC,EAAEC,SAASd,KAAKe,OAAOC,KAAKhB,MAAO,MAEvFT,EAAM0B,IAAI,WAAY,WACpB,MAAOlC,SAAQc,QAAQX,GAASgC,IAAInB,EAAMa,qBAgE9C,MA5DA7C,cAAa+B,IACXnB,IAAK,WACLwC,MAAO,WAEL,MAAON,GAAEO,KAAKpB,KAAKG,IAAIkB,OAAOC,yBAA0B,QAAS,cAKnE3C,IAAK,OACLwC,MAAO,SAAc1B,GACnB,MAAOA,IAAQ,EAAIF,EAAMC,KAAKC,GAAM8B,MAAQvB,KAAKuB,KAAK9B,EAAO,SAG/Dd,IAAK,YACLwC,MAAO,SAAmB1B,GACxB,OAAQF,EAAMC,KAAKC,QAAa+B,WAAa,KAG/C7C,IAAK,OACLwC,MAAO,SAAc1B,GACnBO,KAAKM,SAASC,QACZkB,MAAOzB,KAAKC,KAAKV,EAAMC,KAAKC,GAAMiC,YAClCC,WAAY3B,KAAKC,KAAKV,EAAMC,KAAKC,GAAMkC,YACvCH,UAAWxB,KAAKwB,UAAU/B,GAC1BmC,SAAU,KAAMxC,EAAWyC,QAAQ,oCAAqC,KAAMzC,EAAWyC,QAAQ,sCAAuC,KAAMzC,EAAWyC,QAAQ,6BACjKC,KAAMvC,EAAMC,KAAKC,GAAMsC,UACvBC,IAAKzC,EAAMC,KAAKC,GAAMuC,IACtBC,IAAK1C,EAAMC,KAAKC,GAAMwC,MAGxBjC,KAAKM,SAASI,KAAKV,KAAKuB,KAAK9B,OAG/Bd,IAAK,SACLwC,MAAO,WAELnB,KAAKE,MAELF,KAAKM,SAASC,OAAOP,KAAKQ,YAE1BR,KAAKU,KAAKnB,EAAME,SAGlBd,IAAK,MACLwC,MAAO,WACLpC,QAAQc,QAAQA,GAASqC,IAAI,SAAUnD,QAAQc,QAAQsC,QAAQC,SAAWrD,QAAQc,QAAQA,GAASwC,SAASC,QAK9G3D,IAAK,oBACL4D,IAAK,WAIH,MAFAvC,MAAKwC,mBAAqBxC,KAAKwC,oBAAsB3B,EAAE4B,WAAa,UAE7DzC,KAAKwC,uBAIT1C","file":"../../../app/timeline/timeline-ff61a7e200.directive.js","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nangular.module('app').directive('timeline', function ($window, $filter, $translate, Timeline) {\n  return {\n    restrict: 'E',\n    scope: {\n      meta: '=',\n      step: '='\n    },\n    replace: true,\n    template: '<div class=\"timeline\"><svg class=\"timeline__chart\"></svg></div>',\n    link: function link(scope, element) {\n      return new (function () {\n        function _class() {\n          var _this = this;\n\n          _classCallCheck(this, _class);\n\n          // Get i18n filter function\n          this.i18n = $filter('i18n');\n          // Resize the parent element to fit to the screen\n          this.fit();\n          // Create a SVG and append it to the element\n          this.svg = d3.select(element[0]).select('svg');\n          // Create a Timeline instance\n          this.timeline = new Timeline(this.svg);\n          // Use dynamic sizes\n          this.timeline.config(this.bounding());\n          // Watch for change on the step attribute\n          scope.$watch('step', function (step) {\n            // Don't go too far!\n            if (step < scope.meta.length) {\n              // Draw the timeline at a given step\n              _this.draw(step);\n            }\n          });\n          // Watch for windows resize\n          angular.element($window).on(this.windowResizeEvent, _.throttle(this.resize.bind(this), 150));\n          // Watch for scope destruction\n          scope.$on('$destroy', function () {\n            return angular.element($window).off(_this.windowResizeEvent);\n          });\n        }\n\n        _createClass(_class, [{\n          key: 'bounding',\n          value: function bounding() {\n            // Get SVG sizes\n            return _.pick(this.svg.node().getBoundingClientRect(), ['width', 'height']);\n          }\n          // Get last available data for the given step\n\n        }, {\n          key: 'data',\n          value: function data(step) {\n            return step >= 0 ? scope.meta[step].data || this.data(step - 1) : [];\n          }\n        }, {\n          key: 'smoothing',\n          value: function smoothing(step) {\n            return (scope.meta[step] || {}).smoothing || 0;\n          }\n        }, {\n          key: 'draw',\n          value: function draw(step) {\n            this.timeline.config({\n              yunit: this.i18n(scope.meta[step].yaxislabel),\n              highlights: this.i18n(scope.meta[step].highlights),\n              smoothing: this.smoothing(step),\n              rulers: [[2004, $translate.instant('timeline.rulers.10-new-country')], [2007, $translate.instant('timeline.rulers.romania-bulgaria')], [2013, $translate.instant('timeline.rulers.croatia')]],\n              type: scope.meta[step].charttype,\n              min: scope.meta[step].min,\n              max: scope.meta[step].max\n            });\n            // Configure the chart with the new step\n            this.timeline.draw(this.data(step));\n          }\n        }, {\n          key: 'resize',\n          value: function resize() {\n            // Parent element must fit to the new window's height\n            this.fit();\n            // Use dynamic sizes\n            this.timeline.config(this.bounding());\n            // And redraw at the current step\n            this.draw(scope.step);\n          }\n        }, {\n          key: 'fit',\n          value: function fit() {\n            angular.element(element).css('height', angular.element(window).height() - angular.element(element).offset().top);\n          }\n          // Uniq event on window element to destroy it with the directive\n\n        }, {\n          key: 'windowResizeEvent',\n          get: function get() {\n            // Create the event tken only once\n            this._windowResizeEvent = this._windowResizeEvent || _.uniqueId() + ' resize';\n            // Simply return the event string\n            return this._windowResizeEvent;\n          }\n        }]);\n\n        return _class;\n      }())();\n    }\n  };\n});"]}