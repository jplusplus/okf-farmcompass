{"version":3,"sources":["/.tmp/routes.js"],"names":["routesConfig","$stateProvider","$urlRouterProvider","$locationProvider","html5Mode","otherwise","state","url","component","resolve","use","$translate","$stateParams","language","params","index","value","dynamic","meta","$http","get","cache","then","r","data","gaRun","$transitions","$window","$location","onSuccess","transition","identifier","targetState","uri","_","reduce","key","addQueryParam","Uri","ga","name","page","toString","$inject","angular","module","config","run"],"mappings":"AAAA,YAKA,SAASA,cAAaC,EAAgBC,EAAoBC,GACxDA,EAAkBC,WAAU,GAC5BF,EAAmBG,UAAU,UAE7BJ,EAAeK,MAAM,QACnBC,IAAK,aACLC,UAAW,OACXC,SACEC,KAAA,aAAA,eAAK,SAAaC,EAAYC,GAC5B,UAEA,OAAOD,GAAWD,IAAIE,EAAaC,eAGtCP,MAAM,cACPE,UAAW,aACXD,IAAK,WACJD,MAAM,aACPE,UAAW,YAEXM,QACEC,OACEC,MAAO,KACPC,SAAS,IAGbR,SACES,MAAA,QAAM,SAAcC,GAClB,UAEA,OAAOA,GAAMC,IAAI,kBAAoBC,OAAO,IAAQC,KAAK,SAAUC,GACjE,MAAOA,GAAEC,YAIdlB,MAAM,sBAMX,QAASmB,OAAMC,EAAcC,EAASC,GAEpCF,EAAaG,aAAc,SAAUC,EAAYxB,GAC/C,GAAIyB,GAAaD,EAAWE,cAAcD,aAEtCE,EAAMC,EAAEC,OAAOL,EAAWE,cAAclB,SAAU,SAAUmB,EAAKjB,EAAOoB,GAC1E,MAAOH,GAAII,cAAcD,EAAKpB,IAC7B,GAAIsB,KAAIV,EAAUrB,OAErBoB,GAAQY,GAAG,OAAQ,YACjBC,KAAMT,EAAWS,MAAQT,EACzBU,KAAMR,EAAIS,eAvDhB1C,aAAa2C,SAAW,iBAAkB,qBAAsB,qBAChElB,MAAMkB,SAAW,eAAgB,UAAW,aAD5CC,QAAQC,OAAO,OAAOC,OAAO9C,cAAc+C,IAAItB","file":"../routes-ae952af9f3.js","sourcesContent":["'use strict';\n\nangular.module('app').config(routesConfig).run(gaRun);\n\n/** @ngInject */\nfunction routesConfig($stateProvider, $urlRouterProvider, $locationProvider) {\n  $locationProvider.html5Mode(false);\n  $urlRouterProvider.otherwise('/en_BE');\n\n  $stateProvider.state('main', {\n    url: '/:language',\n    component: 'main',\n    resolve: {\n      use: function use($translate, $stateParams) {\n        'ngInject';\n\n        return $translate.use($stateParams.language);\n      }\n    }\n  }).state('main.about', {\n    component: 'main.about',\n    url: '/about'\n  }).state('main.step', {\n    component: 'main.step',\n    // url: 'playing/:index',\n    params: {\n      index: {\n        value: null,\n        dynamic: true\n      }\n    },\n    resolve: {\n      meta: function meta($http) {\n        'ngInject';\n\n        return $http.get('data/meta.json', { cache: true }).then(function (r) {\n          return r.data;\n        });\n      }\n    }\n  }).state('main.step.outro', {\n    //url: '/outro'\n  });\n}\n\n/** @ngInject */\nfunction gaRun($transitions, $window, $location) {\n  // Redirect to login if route requires auth and you're not logged in\n  $transitions.onSuccess({}, function (transition, state) {\n    var identifier = transition.targetState().identifier();\n    // Build parameters string\n    var uri = _.reduce(transition.targetState().params(), function (uri, value, key) {\n      return uri.addQueryParam(key, value);\n    }, new Uri($location.url()));\n    // Send 'pageview' to Google Analytics\n    $window.ga('send', 'pageview', {\n      name: identifier.name || identifier,\n      page: uri.toString()\n    });\n  });\n}"]}